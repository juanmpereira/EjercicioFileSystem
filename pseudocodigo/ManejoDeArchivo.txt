public class ManejoDeArchivo{
	Buffer buffer;
	FileSystem fs;

	ManejoDeArchivo(fileSystem) { 
				this.fs = fileSystem;
	}

	ArchivAbierto abrirArchivo(String path){ 
	int fd = fs.openFile(path);
	if (fd < 0)  -- si devuelve negativo es por que no existia el archivo y lo hago fallar
	trow Exception ("error al abrir)
	else
	return new archivoAbierto(fd,fs}
	}

public class ArchivoAbierto{
	int df;
	LowLevelFyleSystem fs;

	public void ArchivoAbierto(int fd,FyleSystem fs){
	this fd = fd;
	this fs=fs;
	}

	void cerrarArchivo(){
		fs.closeFile(fd);
	}	

	void lecturaSincronizada(Buffer buffer){
		int cantleido = fs.syncReadFile(fd,buffer.obtenerBytes(),buffer.obtenerComienzo(),buffer.obtenerFinal());
		int esperado = buffer.final()
		if (cantleido != esperado)
		throw Exception("error, la lectura no fue la esperada");
	}

	void escrituraSincronizada(Buffer buffer){
		fs.voisyncWriteFile(fd, buffer.obtenerBytes(),buffer.obtenerComienzo(), buffer.obtenerFinal() );	
	}
	
	lecturaAsincroniconica(Buffer buffer,continuacion){
		fs.asyncReadFile(fd,buffer.obtenerBytes(),buffer.obtenerComienzo(), buffer.obtenerFinal(), continuacion);
		}
	
}

public class Buffer {
	byte[] bufferBytes;
	int bufferStart;
	int bufferEnd;
}